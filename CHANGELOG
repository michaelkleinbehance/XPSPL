v0.3.0-alpha
-----------------------------------
- \prggmr\engine\Signals::HANDLE_EXCEPTION signal is signaled when an Exception
  is encountered during Handle execution.
- \prggmr\engine\Signals class added
- Engine::_fire renamed to Engine::_execute
- Signal::delChain renamed to Signal::removeChain
- Handle::fire renamed to Handle::execute
- Queue::_prioritize now calls flush.
- Modified doc block comments.
- Subscriptions are now refereed to as handles.
- Added prggmr\handle\Time class.
- Subscription class renamed to Handle.
- once api function renamed to handle_once.
- fire api function renamed to signal.
- subscribe api function renamed to handle.

v0.2.2 ( Jan 11th, 2012 )
-----------------------------------
- Fixed a bug causing a Fatal Error when the Event was removed from the arguments.
  within a Subscription, this now throws a RuntimeException when encountered.
- Added signals/ directory all files are included automatically.
- Regex Signal was removed from signals.php file.
- API functions now have the ability to be replaced before loading the API.
- prggmrd bin file renamed to prggmr

v0.2.1 ( Dec 19th, 2011 )
-----------------------------------
- Subscription Exceptions contain the file/line and message of the exception.
- Event::getData now returns null instead of false if the data does not exist.
- Timeouts and intervals can now be set to start at a pre determined time
- Added PRGGMR_EVENTED_ERRORS constant which allows enabling prggmr's evented
  exceptions.
- Added prggmr::EXCEPTION constant used for prggmr's evented exceptions.
- Added PRGGMRUNIT_MASTERMIND constant.
- Prggmr is now defined as prggmr (lowercase).
- Subscriptions now throw a SubscriptionException if an error is encountered.
- Multiple Signals can now be triggered upon a single fire
- added the prggmrd bin file
- timeout/interval set methods now return the subscription
- Moved SignalInterface and RegexSignal into the signal.php file ... each class
  was very small and it keeps the lib a little tidier.
- Added pre and post fire events to subscriptions
- Returned event data is now added to the event data as the "return" key.
- Errors encountered in daemon mode first try to remove timer then queue signal
  subscription
- clearInterval now returns false if a interval isnt cleared

v0.2.0 ( July 9th, 2011 )
-----------------------------------
- Added PRGGMR_DEBUG constant
- Added the "getSignal()" method to Event which returns the Event Signal object
- Added a key parameter to Event::getData to allow for direct data access
- Fixed a bug in the Queue which caused errors when using E_STRICT @alkavan
- Subcription fires are now handled via an internal engine fire
  which is used for both timed and subscribed events.
- Added countTimers method to Engine
- Added shutdown method to Engine
- Added Engine daemon mode which allows an engine to run as a daemon
- Added Engine states (RUNNING, ERROR, DAEMON)
- Added getState method to Engine
- Added setInterval, setTimeout, clearInterval, clearTimeout methods to Engine
- Removed Adapter and AdapterInterface
- Added chain, dechain, once API functions
- Engine->subscribe() param list changed to signal, subscription, identifier,
  priority, chain, exhaust.
- Signal->getChain() now returns an array or null
- Event->getChain() now returns an array or null
- Chains are now stored as array to allow for unlimited chains within a signal
- Prggmr class added
- Engine no longer implements a singleton
- Added Server class
- Engine now removes exhausted events.
- Added subscription exhaustion.

v0.1.2 ( June 21st, 2011 )
-----------------------------------
- Engine no longer uses an SplObjectStorage for queue storage
- Added _indexStorage and _storage arrays to engine, these are used for queue
  storage

v0.1.1 ( May 30th, 2011 )
-----------------------------------
- Added the SignalInterface interface
- Added the Signal object
- Added the Subscription object
- Added the Queue object
- Removed benchmark utility
- Removed data object
- Removed functions file
- Removed the autoloaders
- Removed all logic code from adapter, adapter now acts only as an interface to
  the engine.
- Renamed Listenable class to Adapter
- Adapter implements new Engine api
- AdapterInterface implements new Engine api
- Engine object is now a singleton
- Engine object rewritten
- Queue and Engine now use a SplObjectStorage rather than an array
- Event object no longer supplies the event chain, rather is supplied a chained
  event
- Event chains are now added through a signal
- Signal object added
- Queue object added implemented as a SplObjectStorage with priority in a queue
  (LIFO) by default
- bubble method renamed to fire
- prggmr object renamed to engine
- All Unittests rewritten
- Event is no longer a child of Adapter
- RegexSignal object added which supports event naming of "hello/:world" and any
  regex string
- New api implemented (fire, subscribe) removed benchmark, bubble

v0.1.0 ( March 9th, 2011 )
-----------------------------------
- Inital Release
